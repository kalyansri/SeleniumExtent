<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="102752" started-at="2020-03-14T08:24:14Z" finished-at="2020-03-14T08:25:57Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="102752" started-at="2020-03-14T08:24:14Z" finished-at="2020-03-14T08:25:57Z">
      <class name="Reports.ExtentReport4Example">
        <test-method status="PASS" signature="startReport()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="startReport" is-config="true" duration-ms="244" started-at="2020-03-14T13:54:14Z" finished-at="2020-03-14T13:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="setup" is-config="true" duration-ms="12889" started-at="2020-03-14T13:54:14Z" finished-at="2020-03-14T13:54:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="kal()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="kal" duration-ms="60305" started-at="2020-03-14T13:54:27Z" finished-at="2020-03-14T13:55:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kal -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="getResult" is-config="true" duration-ms="1024" started-at="2020-03-14T13:55:27Z" finished-at="2020-03-14T13:55:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: kal STATUS:SUCCESS METHOD:ExtentReport4Example.kal()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="setup" is-config="true" duration-ms="12350" started-at="2020-03-14T13:55:28Z" finished-at="2020-03-14T13:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="verifyLogo()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="verifyLogo" duration-ms="292" started-at="2020-03-14T13:55:41Z" finished-at="2020-03-14T13:55:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertFalse(Assert.java:58)
	at org.testng.Assert.assertFalse(Assert.java:68)
	at Reports.ExtentReport4Example.verifyLogo(ExtentReport4Example.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:715)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:907)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1237)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:51)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:85)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1197)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1122)
	at org.testng.TestNG.run(TestNG.java:1030)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogo -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="getResult" is-config="true" duration-ms="1630" started-at="2020-03-14T13:55:41Z" finished-at="2020-03-14T13:55:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: verifyLogo STATUS:FAILURE METHOD:ExtentReport4Example.verifyLogo()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="setup" is-config="true" duration-ms="12348" started-at="2020-03-14T13:55:43Z" finished-at="2020-03-14T13:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="verifyTitle" duration-ms="17" started-at="2020-03-14T13:55:55Z" finished-at="2020-03-14T13:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="getResult" is-config="true" duration-ms="954" started-at="2020-03-14T13:55:55Z" finished-at="2020-03-14T13:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: verifyTitle STATUS:SUCCESS METHOD:ExtentReport4Example.verifyTitle()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]]
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:Reports.ExtentReport4Example@a4102b8]" name="endReport" is-config="true" duration-ms="670" started-at="2020-03-14T13:55:56Z" finished-at="2020-03-14T13:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- Reports.ExtentReport4Example -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
